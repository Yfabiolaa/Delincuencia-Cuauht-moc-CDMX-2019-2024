# -*- coding: utf-8 -*-
"""Gráficas_ Analisis_delito_2024.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rAacR1SX7sOQvLGWfWAp0oQP-2X2tSM_

## 2023 Análisis ROBO_TRANSEUNTE_EN_VIA_PUBLICA_CON_VIOLENCIA
"""

#Comenzaremos importanto nuesto csv, para comenzar con el análisis del año  2023
import pandas as pd
df_2023 = pd.read_csv('/content/ROBO_TRANSEUNTE_EN_VIA_PUBLICA_CON_VIOLENCIA_2024.csv')
df_2023.head()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Supongamos que tu DataFrame se llama `df_2023` y contiene la columna 'mes'

# Crear un diccionario para mapear los meses a su orden numérico (si es necesario)
meses_ordenados = {
    'Enero': 1, 'Febrero': 2, 'Marzo': 3, 'Abril': 4,
    'Mayo': 5, 'Junio': 6, 'Julio': 7, 'Agosto': 8,
    'Septiembre': 9, 'Octubre': 10, 'Noviembre': 11, 'Diciembre': 12
}

# Mapear los meses a números si están en texto
df_2023['mes_num'] = df_2023['mes'].map(meses_ordenados)

# Contar los delitos por mes
delitos_por_mes = df_2023.groupby('mes_num').size().reset_index(name='conteo')

# Ordenar los meses para asegurar que aparezcan en el orden correcto
delitos_por_mes = delitos_por_mes.sort_values('mes_num')

# Configurar etiquetas de meses
etiquetas_meses = [k for k, v in sorted(meses_ordenados.items(), key=lambda item: item[1])]

# Estilo del gráfico
plt.figure(figsize=(12, 6))
sns.set_theme(style="whitegrid")

# Crear el gráfico con estilo
plt.plot(
    delitos_por_mes['mes_num'],
    delitos_por_mes['conteo'],
    marker='o',
    linestyle='-',
    color='#6a0dad',
    linewidth=2,
    markerfacecolor='#4b0082',
    markeredgecolor='#4b0082',
    markersize=8
)

# Mejoras visuales
plt.fill_between(
    delitos_por_mes['mes_num'],
    delitos_por_mes['conteo'],
    color='#b19cd9',
    alpha=0.3
)

# Etiquetas y título
plt.xticks(ticks=delitos_por_mes['mes_num'], labels=etiquetas_meses, rotation=45, fontsize=10, color='#4b0082')
plt.yticks(fontsize=10, color='#4b0082')
plt.xlabel('Mes', fontsize=12, color='#4b0082')
plt.ylabel('Número de delitos', fontsize=12, color='#4b0082')
plt.title('Frecuencia de delitos por mes en 2023', fontsize=14, color='#6a0dad', fontweight='bold')

# Línea del eje horizontal
plt.axhline(y=0, color='gray', linewidth=0.5, linestyle='--')

# Cuadrícula mejorada
plt.grid(axis='y', linestyle='--', alpha=0.7)

# Ajustar diseño
plt.tight_layout()

# Mostrar el gráfico
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# Agrupar los datos por colonia y contar los delitos
delitos_por_colonia = df_2023.groupby('colonia').size().reset_index(name='conteo')

# Ordenar las colonias por número de delitos (de mayor a menor)
delitos_por_colonia = delitos_por_colonia.sort_values(by='conteo', ascending=False)

# Crear el gráfico de barras horizontales
plt.figure(figsize=(12, 8))

# Colores personalizados en azul
colores = ['#1e90ff' if i % 2 == 0 else '#1e90ff' for i in range(len(delitos_por_colonia))]
plt.barh(delitos_por_colonia['colonia'], delitos_por_colonia['conteo'], color=colores, edgecolor='black', alpha=0.85)

# Etiquetas y título en azul y bold
plt.xlabel('Frecuencia de delitos', color='#1e90ff', fontweight='bold', fontsize=12)
plt.ylabel('Colonia', color='#1e90ff', fontweight='bold', fontsize=12)
plt.title('Cantidad de delitos por colonia (2023)', color='#1e90ff', fontweight='bold', fontsize=14)

# Mejoras visuales
plt.xticks(fontsize=10, color='#1e90ff', fontweight='bold')
plt.yticks(fontsize=10, color='#1e90ff', fontweight='bold')
plt.gca().invert_yaxis()  # Invertir el eje Y para que la colonia con más delitos aparezca arriba

# Cuadrícula personalizada
plt.grid(axis='x', linestyle='--', color='gray', alpha=0.6)

# Ajustar el diseño
plt.tight_layout()

# Mostrar el gráfico
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# Agrupar los datos por sexo y contar los delitos
delitos_por_sexo = df_2023.groupby('sexo').size().reset_index(name='conteo')

# Configurar el gráfico
plt.figure(figsize=(8, 6))

# Crear el gráfico de barras con colores más acordes
colores = ['#6a0dad','#1e90ff']  # Azul y morado
plt.bar(
    delitos_por_sexo['sexo'],
    delitos_por_sexo['conteo'],
    color=colores,
    edgecolor='black',
    alpha=0.85
)

# Etiquetas y título
plt.xlabel('Sexo', fontsize=12, color='#4b0082', fontweight='bold')
plt.ylabel('Frecuencia de delitos', fontsize=12, color='#4b0082', fontweight='bold')
plt.title('Distribución de delitos por sexo 2023', fontsize=14, color='#6a0dad', fontweight='bold')

# Mejoras visuales
plt.xticks(fontsize=10, color='#4b0082')

import matplotlib.pyplot as plt

# Crear el histograma
plt.figure(figsize=(10, 7))
plt.hist(
    df_2023['edad'],
    bins=10,
    color='#1e90ff',  # Azul vibrante
    alpha=0.85,       # Más opacidad para mayor claridad
    edgecolor='black',
    linewidth=1.2     # Bordes más definidos
)

# Etiquetas y título
plt.xlabel('Edad', fontsize=12, color='#1e90ff', fontweight='bold')
plt.ylabel('Frecuencia', fontsize=12, color='#1e90ff', fontweight='bold')
plt.title('Distribución de edades en 2023', fontsize=14, color='#1e90ff', fontweight='bold')

# Mejoras visuales
plt.xticks(fontsize=10, color='#1e90ff')
plt.yticks(fontsize=10, color='#1e90ff')
plt.grid(axis='y', linestyle='--', color='gray', alpha=0.6)

# Añadir un fondo sutil
plt.gca().set_facecolor('#f0f8ff')  # Fondo azul claro

# Ajustar diseño
plt.tight_layout()

# Mostrar el gráfico
plt.show()